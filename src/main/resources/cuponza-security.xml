<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd"> 

	<http auto-config="false" use-expressions="true">
		
		<form-login 	authentication-failure-handler-ref="ajaxAuthFailureHandler" 
						authentication-success-handler-ref="ajaxAuthSuccessHandler"
						login-processing-url="/login"/> 
       	  <!--<csrf/> http://stackoverflow.com/questions/23669424/cant-create-csrf-token-with-spring-security-->
		 <remember-me />
		<logout logout-success-url="/" logout-url="/logout" invalidate-session="true" />
		<!-- <session-management invalid-session-url="/" /> -->
		 <logout delete-cookies="JSESSIONID" />
	</http>
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" >
				 <!-- <salt-source ref="saltSource"/> salting is transparent  -->
			</password-encoder>
			<jdbc-user-service data-source-ref="dataSource.mysql"
				users-by-username-query="
         			SELECT USERNAME, PASSWORD, CASE ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'ENABLED' FROM USERS WHERE USERNAME=?;"
       authorities-by-username-query="
        			SELECT u.USERNAME, r.authority FROM USERS u, AUTHORITIES r WHERE u.USERNAME=? and u.authority_id=r.authority_id;"/>
		</authentication-provider>
	</authentication-manager>
</beans:beans>